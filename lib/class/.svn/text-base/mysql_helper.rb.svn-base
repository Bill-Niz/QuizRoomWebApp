# To change this template, choose Tools | Templates
# and open the template in the editor.
require "dbi"
load "lib/config.rb"

class MysqlHelper
  
  def initialize(host=Config::DB_ADRESS,user=Config::CLIENT_DB_USER,password=Config::CLIENT_DB_PASSWORD,db=Config::DB_NAME)
    @host = host
    @user = user
    @password = password
    @dataBase = db
    @dbh
    @connected = false
  end
  
  
  ##
  #
  # Connection to the DB server
  #
  ##
  def connect
    
    if !self.connected?
    begin
     # connect to the MySQL server
     dbh = DBI.connect("DBI:Mysql:#{@dataBase}:#{@host}", 
	                    "#{@user}", "#{@password}")
     @connected=true
    
    rescue DBI::DatabaseError => e
     puts "An error occurred"
     puts "Error code:    #{e.err}"
     puts "Error message: #{e.errstr}"
    ensure
     # disconnect from server
     dbh.disconnect if dbh
     @connected=false
    end
  end
  end
  
  ##
  #
  # Check if we are connected to the  DB server
  #
  ##
  def connected?
    @connected
  end
  
  
  ##
  #
  #Check if a data is in DB
  #
  # - table : the table where data is
  # - column : the column name to checke
  # - dataToCheck : the data that have to be compared
  #
  ##
  def isInDB(table,column,dataToCheck)
    query = "SELECT ? FROM ? WHERE ? = ?"
    isIn = false
    self.connect unless self.connected?  # => connect to the DB server if not connected
    
    sth =@dbh.prepare(query)
    
    sth.execute(column,table,column,dataToCheck)
    
    if sth.size >=1
      isIn = true
    end
    
    isIn
  end
  
  ##
  #
  # Inster user into the DB
  ##
  def insertUser(email,password,name,lastname,uuid)
    
  end
end
